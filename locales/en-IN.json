{
  "common": {
    "success": "Operation completed successfully",
    "failure": "Operation failed",    
    "missingParams": "Missing required parameters",
    "internalError": "Internal Server Error",
    "noRecords": "No records found",
    "notFound": "No document found with that ID",
    "taskStatusNotFound": "No Task Status found",
    "taskPriorityNotFound": "No Task Status found",
    "permissionNotFound": "No permission found",
    "emailTemplateNotFound": "Email template not found",
    "systemTemplateDeleteNotAllowed": "System Defined template, User can't delete",
    "serverError": "Server error",
    "companyIdMissing": "Company ID not found in cookies",
    "incomeTaxSectionsNotFound": "IncomeTaxSections not found for the given company",
    "incomeTaxSectionNotFound": "IncomeTaxSection not found",
    "incomeTaxComponantNotFound": "Income Tax Componant not found",
    "userStateNotFound": "No user state found with that key",
    "invalidLogLevels": "logLevels must be an array of strings",
    "testLogSuccess": "Test log executed successfully",
    "requiredFieldsMissing": "userId, machineId, and isOnline are required"
  },
  "appWebsite": {
    "addSuccess": "App/website record added successfully for user {userId}",
    "addFailure": "Failed to add app/website record",
    "deleteSuccess": "App/website record {recordId} deleted successfully",
    "deleteFailure": "Failed to delete app/website record",
    "getByIdSuccess": "App/website record {recordId} retrieved successfully",
    "getByIdFailure": "Failed to retrieve app/website record",
    "updateSuccess": "App/website record {recordId} updated successfully",
    "updateFailure": "Failed to update app/website record",
    "getByIdAndDateSuccess": "App/website record {recordId} for date {date} retrieved successfully",
    "getByIdAndDateFailure": "Failed to retrieve app/website record for date",
    "getAllByDateSuccess": "All app/website records for date {date} retrieved successfully",
    "getAllByDateFailure": "Failed to retrieve app/website records for date",
    "getUserProductivityAppsSuccess": "Productivity apps retrieved successfully for user {userId}",
    "getUserProductivityAppsFailure": "Failed to retrieve productivity apps",
    "getProductivitiesSuccess": "All productivity records retrieved successfully",
    "getProductivitiesFailure": "Failed to retrieve productivity records",
    "getProductivityByIdSuccess": "Productivity record {recordId} retrieved successfully",
    "getProductivityByIdFailure": "Failed to retrieve productivity record",
    "addProductivitySuccess": "Productivity record added successfully",
    "addProductivityFailure": "Failed to add productivity record",
    "updateProductivitySuccess": "Productivity record {recordId} updated successfully",
    "updateProductivityFailure": "Failed to update productivity record",
    "deleteProductivitySuccess": "Productivity record {recordId} deleted successfully",
    "deleteProductivityFailure": "Failed to delete productivity record",
    "addBrowserHistorySuccess": "Browser history record added successfully",
    "addBrowserHistoryFailure": "Failed to add browser history record",
    "deleteBrowserHistorySuccess": "Browser history record {recordId} deleted successfully",
    "deleteBrowserHistoryFailure": "Failed to delete browser history record",
    "getBrowserHistorySuccess": "Browser history records retrieved successfully",
    "getBrowserHistoryFailure": "Failed to retrieve browser history records"
  },
  "assetsManagement": {
    "addAssetTypeSuccess": "Asset type '{typeName}' created successfully",
    "addAssetTypeFailure": "Failed to create asset type",
    "getAssetTypesSuccess": "Asset type {recordId} retrieved successfully",
    "updateAssetTypeSuccess": "Asset type {recordId} updated successfully",
    "updateAssetTypeFailure": "Failed to update asset type",
    "deleteAssetTypeSuccess": "Asset type {recordId} deleted successfully",
    "deleteAssetTypeBlocked": "Asset type cannot be deleted as it is associated with existing assets",
    "getAllAssetTypesSuccess": "All asset types retrieved successfully",
    "getAssetAttributeValueSuccess": "Asset attribute value {recordId} retrieved successfully",
    "updateAssetAttributeValueSuccess": "Asset attribute value {recordId} updated successfully",
    "deleteAssetAttributeValuesSuccess": "Asset attribute values for asset {assetId} deleted successfully",
    "getAllAssetAttributeValuesSuccess": "All asset attribute values retrieved successfully",
    "createAssetAttributeValueSuccess": "Asset attribute value created successfully for asset {assetId}",
    "deleteAssetAttributeValueSuccess": "Asset attribute value {recordId} deleted successfully",
    "createAssetStatusSuccess": "Asset status '{statusName}' created successfully",
    "getAssetStatusSuccess": "Asset status {recordId} retrieved successfully",
    "updateAssetStatusSuccess": "Asset status {recordId} updated successfully",
    "deleteAssetStatusSuccess": "Asset status {recordId} deleted successfully",
    "deleteAssetStatusBlocked": "Asset status cannot be deleted as it is associated with existing assets",
    "getAllAssetStatusesSuccess": "All asset statuses retrieved successfully",
    "createCustomAttributeSuccess": "Custom attribute '{attributeName}' created successfully",
    "getCustomAttributeSuccess": "Custom attribute {recordId} retrieved successfully",
    "updateCustomAttributeSuccess": "Custom attribute {recordId} updated successfully",
    "deleteCustomAttributeSuccess": "Custom attribute {recordId} deleted successfully",
    "deleteCustomAttributeBlocked": "Custom attribute cannot be deleted as it is in use",
    "deleteCustomAttributeByAssetTypeSuccess": "Custom attributes for asset type {assetTypeId} deleted successfully",
    "getAllCustomAttributesSuccess": "All custom attributes retrieved successfully",
    "addCustomAttributesSuccess": "Custom attributes added successfully for asset type {assetTypeId}",
    "getAssetCustomAttributesSuccess": "Custom attributes for asset type {assetTypeId} retrieved successfully",
    "createEmployeeAssetSuccess": "Employee asset created successfully",
    "getEmployeeAssetSuccess": "Employee assets for employee {employeeId} retrieved successfully",
    "updateEmployeeAssetSuccess": "Employee asset {recordId} updated successfully",
    "deleteEmployeeAssetSuccess": "Employee asset for employee {employeeId} deleted successfully",
    "getAllEmployeeAssetsSuccess": "All employee assets retrieved successfully",
    "createVendorSuccess": "Vendor '{vendorName}' created successfully",
    "getVendorSuccess": "Vendor {recordId} retrieved successfully",
    "updateVendorSuccess": "Vendor {recordId} updated successfully",
    "deleteVendorSuccess": "Vendor {recordId} deleted successfully",
    "getAllVendorsSuccess": "All vendors retrieved successfully",
    "addVendorAssetSuccess": "Vendor asset added successfully",
    "getVendorAssetSuccess": "Vendor asset {recordId} retrieved successfully",
    "updateVendorAssetSuccess": "Vendor asset {recordId} updated successfully",
    "deleteVendorAssetSuccess": "Vendor asset {recordId} deleted successfully",
    "getAllVendorAssetsSuccess": "All vendor assets retrieved successfully",
    "addAssetSuccess": "Asset '{assetName}' added successfully",
    "getAssetSuccess": "Asset {recordId} retrieved successfully",
    "updateAssetSuccess": "Asset {recordId} updated successfully",
    "deleteAssetSuccess": "Asset {recordId} deleted successfully",
    "deleteAssetBlocked": "Asset cannot be deleted as it is in use",
    "deleteAssetConflict": "Selected asset has an assigned status",
    "getAllAssetsSuccess": "All assets retrieved successfully",
    "getAllAssetsByAssetTypeSuccess": "Assets for asset type {assetTypeId} retrieved successfully",
    "getUnassignedAssetsForUserSuccess": "Unassigned assets for user {userId} retrieved successfully",
    "getUnassignedAssetsSuccess": "All unassigned assets retrieved successfully",
     "attributeInUse": "Asset Attribute Value cannot be deleted as it is in use"
  },
  "attendance": {
    "createGeneralSettingsSuccess": "General settings created successfully for company {companyId}",
    "createGeneralSettingsFailure": "Failed to create general settings",
    "getGeneralSettingsSuccess": "General settings retrieved successfully for company {companyId}",
    "getGeneralSettingsFailure": "General settings not found",
    "updateGeneralSettingsSuccess": "General settings {recordId} updated successfully",
    "updateGeneralSettingsFailure": "Failed to update general settings",
    "createRegularizationReasonSuccess": "Regularization reason created successfully for company {companyId}",
    "createRegularizationReasonFailure": "Failed to create regularization reason",
    "getRegularizationReasonSuccess": "Regularization reason {recordId} retrieved successfully",
    "getRegularizationReasonFailure": "Regularization reason not found",
    "updateRegularizationReasonSuccess": "Regularization reason {recordId} updated successfully",
    "updateRegularizationReasonFailure": "Failed to update regularization reason",
    "deleteRegularizationReasonSuccess": "Regularization reason {recordId} deleted successfully",
    "deleteRegularizationReasonFailure": "Regularization reason not found",
    "getAllRegularizationReasonsSuccess": "All regularization reasons retrieved successfully for company {companyId}",
    "createAttendanceModeSuccess": "Attendance mode created successfully for company {companyId}",
    "createAttendanceModeFailure": "Failed to create attendance mode",
    "getAttendanceModeSuccess": "Attendance mode {recordId} retrieved successfully",
    "getAttendanceModeFailure": "Attendance mode not found",
    "updateAttendanceModeSuccess": "Attendance mode {recordId} updated successfully",
    "updateAttendanceModeFailure": "Failed to update attendance mode",
    "deleteAttendanceModeSuccess": "Attendance mode {recordId} deleted successfully",
    "deleteAttendanceModeFailure": "Attendance mode not found",
    "getAllAttendanceModesSuccess": "All attendance modes retrieved successfully",
    "createAttendanceTemplateSuccess": "Attendance template created successfully for company {companyId}",
    "attendanceTemplateNotFound": "Attendance template not found",
    "invalidAttendanceTemplate": "Invalid attendance template",
    "createAttendanceRegularizationSuccess": "Attendance regularization created successfully for company {companyId}",
    "attendanceRegularizationExists": "Attendance regularization with this template already exists",
    "lopAlreadyProcessed": "LOP already processed for user {userId}",
    "attendanceProcessExists": "Attendance process for this period already exists",
    "attendanceProcessNotFound": "Attendance process for this period not found",
    "cannotDeleteAttendanceProcess": "Cannot delete attendance process as it has been exported to payroll",
    "getRosterShiftAssignmentSuccess": "Roster shift assignment retrieved successfully for ID {recordId}",
    "getRosterShiftAssignmentFailure": "Roster shift assignment not found",
    "getRosterShiftAssignmentByUserSuccess": "Roster shift assignment retrieved successfully for user {userId}",
    "getRosterShiftAssignmentByUserFailure": "Roster shift assignment not found for user",
    "createEmployeeDutyRequestSuccess": "Employee duty request created successfully for company {companyId}",
    "createEmployeeDutyRequestFailure": "Failed to create employee duty request",
    "userOnDutyTemplateNotFound": "User on-duty template not assigned for current user",
    "employeeOnDutyRequestExists": "Employee on-duty request already assigned for current user",
    "updateEmployeeDutyRequestSuccess": "Employee duty request {recordId} updated successfully",
    "updateEmployeeDutyRequestFailure": "Employee duty request not found",
    "deleteEmployeeDutyRequestSuccess": "Employee duty request {recordId} deleted successfully",
    "deleteEmployeeDutyRequestFailure": "Employee duty request not found",
    "getAllEmployeeDutyRequestsSuccess": "All employee duty requests retrieved successfully for company {companyId}",
    "getAllEmployeeDutyRequestsFailure": "Failed to retrieve employee duty requests",
    "mappedTimlogToAttendanceSuccess": "Time logs mapped to attendance successfully for company {companyId}",
    "mappedTimlogToAttendanceFailure": "Failed to map time logs to attendance",
    "uploadAttendanceJSONSuccess": "Attendance records processed successfully",
    "uploadAttendanceJSONFailure": "Failed to process attendance records",
    "invalidAttendanceJSONFormat": "Invalid format: Data should be an array of objects",
    "processAttendanceAndLOPSuccess": "Attendance and LOP processed successfully for user {userId}",
    "processAttendanceAndLOPFailure": "Failed to process attendance and LOP",
    "lopAlreadyProcessedForUser": "LOP already processed for user {userId}",
    "processAttendanceUpdateSuccess": "Attendance processed successfully for period {attendanceProcessPeriod}",
    "processAttendanceUpdateFailure": "Failed to process attendance",
    "processAttendanceSuccess": "Attendance processed successfully for period {attendanceProcessPeriodMonth}-{attendanceProcessPeriodYear}",
    "processAttendanceFailure": "Failed to process attendance",
    "deleteAttendanceSuccess": "Attendance process deleted successfully for period {attendanceProcessPeriodMonth}-{attendanceProcessPeriodYear}",
    "deleteAttendanceFailure": "Failed to delete attendance process",
    "getOvertimeByUserSuccess": "Overtime records retrieved successfully for user {userId}",
    "getOvertimeByUserFailure": "Overtime records not found for user"
  },
  "auth": {
    "signupSuccess": "User signed up successfully for company {companyId}",
    "signupFailure": "Failed to sign up user",
    "webSignupSuccess": "User and company signed up successfully",
    "webSignupFailure": "Failed to sign up user and company",
    "createUserSuccess": "User created successfully for company {companyId}",
    "createUserFailure": "Failed to create user",
    "userLimitExceeded": "You have reached the user limit for your subscription plan. Cannot add more than {maxUsers} users. Please upgrade your plan.",
    "loginSuccess": "User logged in successfully",
    "loginFailure": "Failed to log in",
    "emailOrPasswordMissing": "Email or password not specified",
    "incorrectEmailOrPassword": "Incorrect email or password",
    "notLoggedIn": "You are not logged in! Please log in to get access",
    "userNotFound": "The user belonging to this token does no longer exist",
    "passwordChanged": "User recently changed password. Please log in again",
    "subscriptionInactive": "Your subscription is not active. Please contact your administrator",
    "forgotPasswordSuccess": "Password reset email sent successfully",
    "forgotPasswordNoUser": "No account found with this email address",
    "emailSendFailure": "There was an error sending the email. Try again later",
    "resetPasswordSuccess": "Password reset successfully",
    "invalidOrExpiredToken": "Token is invalid or has expired",
    "sendLogSuccess": "Log emails sent successfully",
    "sendLogFailure": "Failed to send log emails",
    "updatePasswordSuccess": "Password updated successfully for user {userId}",
    "updatePasswordFailure": "Failed to update password",
    "incorrectCurrentPassword": "Your current password is wrong",
    "updateUserByInvitationSuccess": "User updated successfully by invitation",
    "updateUserByInvitationFailure": "Failed to update user by invitation",
    "addRoleSuccess": "Role {roleName} added successfully for company {companyId}",
    "addRoleFailure": "Failed to add role",
    "deleteRoleSuccess": "Role deleted successfully",
    "deleteRoleFailure": "Failed to delete role",
    "roleInUse": "Role is already in use. Please delete related records before deleting the role",
    "roleNotFound": "No role found",
    "getRoleSuccess": "Role retrieved successfully",
    "getRolesSuccess": "Roles retrieved successfully for company {companyId}",
    "addSubordinateSuccess": "Subordinate added successfully for user {userId}",
    "addSubordinateFailure": "Failed to add subordinate",
    "subordinateExists": "User subordinate already exists",
    "getSubordinatesSuccess": "Subordinates retrieved successfully for user {userId}",
    "getSubordinatesFailure": "Failed to retrieve subordinates",
    "deleteSubordinatesSuccess": "Subordinate deleted successfully",
    "deleteSubordinatesFailure": "Failed to delete subordinate",
    "getRolePermissionSuccess": "Role permission retrieved successfully",
    "getRolePermissionFailure": "No role permission found",
    "getAllRolePermissionsSuccess": "All role permissions retrieved successfully",
    "getAllRolePermissionsFailure": "Failed to retrieve role permissions",
    "createRolePermissionSuccess": "Role permission created successfully for company {companyId}",
    "createRolePermissionFailure": "Failed to create role permission",
    "rolePermissionExists": "Role permission already exists",
    "updateRolePermissionSuccess": "Role permission updated successfully",
    "updateRolePermissionFailure": "Failed to update role permission",
    "deleteRolePermissionSuccess": "Role permission deleted successfully",
    "deleteRolePermissionFailure": "No role permission found with that ID"
  } 
  
}